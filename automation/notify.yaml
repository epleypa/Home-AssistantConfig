- alias: "Update Available"
  trigger:
    - platform: state
      entity_id: binary_sensor.updater
      to: 'on'
  action:
    - service: notify.telegram_peter
      data:
        title: 'New Home Assistant Release'
        message: "Home Assistant {{ state_attr('binary_sensor.updater','newest_version') }} is now available"
    - service: ifttt.trigger
      data_template: {"event":"Home-AssistantConfig", "value1":"{{ state_attr('binary_sensor.updater','newest_version') }}", "value2":"Home Assistant {{ states.binary_sensor.updater.attributes.newest_version }} is now available."}

- alias: "Emergency Alert"
  trigger:
    - platform: state
      entity_id: binary_sensor.kitchen_leak_sensor
      to: 'on'        
      for:
        minutes: 1
        seconds: 0
    - platform: state
      entity_id: binary_sensor.master_bath_leak_sensor
      to: 'on'        
      for:
        minutes: 1
        seconds: 0
    - platform: state
      entity_id: binary_sensor.half_bath_leak_sensor
      to: 'on'        
      for:
        minutes: 1
        seconds: 0
    - platform: state
      entity_id: binary_sensor.smoke_alarm
      to: 'on'        
      for:
        minutes: 0
        seconds: 10
    - platform: state
      entity_id: binary_sensor.co_alarm
      to: 'on'        
      for:
        minutes: 0
        seconds: 10
  action:
    - service: notify.telegram_peter
      data_template:
        title: 'Master Alarm'
        message: '{% for state in states.binary_sensor -%}
            {% if "leak" in state.name | lower and state.state == "on" %}{{ state.name | lower }} is wet
            {% elif "alarm" in state.name | lower and state.state == "on" %}{{ state.name | lower }} has triggered
            {% endif %}
        {%- endfor %}'
    - service: media_player.turn_on
      entity_id: media_player.home_speakers
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.home_speakers
        volume_level: 0.5
    - service: tts.google_say
      entity_id: media_player.home_speakers
      data_template:
        cache: false
        message: '{% for state in states.binary_sensor -%}
            {% if "leak" in state.name | lower and state.state == "on" %}{{ state.name }} is wet
            {% elif "alarm" in state.name | lower and state.state == "on" %}{{ state.name }} has triggered
            {% endif %}
        {%- endfor %}'
    - service_template: '{% for state in states.binary_sensor -%}
            {% if "alarm" in state.name | lower and state.state == "on" %}homeassistant.turn_on
            {% endif %}
        {%- endfor %}'
      entity_id: group.home_lights        

- alias: "Information Alert"
  trigger:        
    - platform: numeric_state
      entity_id: sensor.washer_power
      below: 5        
      for:
        minutes: 0
        seconds: 1
    - platform: numeric_state
      entity_id: sensor.dryer_power
      below: 5        
      for:
        minutes: 0
        seconds: 1
    - platform: state
      entity_id: binary_sensor.mailbox_contact
      to: 'on'
      # for:
        # minutes: 0
        # seconds: 5
  condition:
    - condition: and
      conditions:
        - condition: time
          after: '08:00:00'
          before: '22:00:00'
        - condition: numeric_state
          entity_id: sensor.uptime
          above: 2
  action:
    - service: notify.telegram_peter
      data_template:
        title: 'Home Info'
        message: "
            {% if trigger.entity_id == 'sensor.dryer_power' %}The dryer is done
            {% elif trigger.entity_id == 'sensor.washer_power' %}The washer is done
            {% elif trigger.entity_id == 'binary_sensor.mailbox_contact' %}The mail has arrived!
            {% endif %}"
    - service: media_player.turn_on
      entity_id: media_player.home_speakers
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.home_speakers
        volume_level: 0.4
    - service: tts.google_say
      entity_id: media_player.home_speakers
      data_template:
        cache: false
        message: "
            {% if trigger.entity_id == 'sensor.dryer_power' %}The dryer is done
            {% elif trigger.entity_id == 'sensor.washer_power' %}The washer is done
            {% elif trigger.entity_id == 'binary_sensor.mailbox_contact' %}The mail has arrived!
            {% endif %}"
    - delay: "00:01:00" # cooldown

- id: system_log
  alias: 'Log Error to File'
  initial_state: true
  trigger:
    - platform: event
      event_type: system_log_event
      event_data:
        level: ERROR
  action:
    - service: notify.error_logfile
      data_template:
        message: '{{ trigger.event.data }}'